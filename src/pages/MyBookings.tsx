import { useEffect, useState } from 'react';
import axios from 'axios';
import { message, Table, Button, Popconfirm } from 'antd';
import Header from '../components/Header';

interface Booking {
  id: number;
  name: string;
  phone: string;
  date: string;
  roomNumber: number;
  userId: number;
}

function MyBookings() {
  const [bookings, setBookings] = useState<Booking[]>([]); // ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® useState ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö bookings

  const fetchMyBookings = async () => {
    const user = JSON.parse(localStorage.getItem('user') || '{}');  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏à‡∏≤‡∏Å localStorage
    
    if (!user || !user.token) {
      message.error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô');
      return;
    }

    try {
      const res = await axios.get<Booking[]>('/api/bookings/my', {
        headers: {
          'Authorization': `Bearer ${user.token}`,  // ‡∏™‡πà‡∏á token ‡πÉ‡∏ô headers
        },
      });
      setBookings(res.data);  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ bookings ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ
    } catch (err) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô:', err);
      message.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ');
    }
  };

  useEffect(() => {
    fetchMyBookings(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å fetchMyBookings ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î
  }, []);

  const cancelBooking = async (id: number) => {
    try {
      await axios.delete(`/api/bookings/${id}`);
      message.success('‚úÖ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      fetchMyBookings(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
    } catch (err) {
      console.error('‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
      message.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á');
    }
  };

  const columns = [
    {
      title: '‡∏´‡πâ‡∏≠‡∏á',
      dataIndex: 'roomNumber',
    },
    {
      title: '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á',
      dataIndex: 'name',
    },
    {
      title: '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£',
      dataIndex: 'phone',
    },
    {
      title: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á',
      dataIndex: 'date',
      render: (text: string) => new Date(text).toLocaleDateString('th-TH'),
    },
    {
      title: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
      render: (_: any, record: Booking) => (
        <Popconfirm
          title="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á?"
          onConfirm={() => cancelBooking(record.id)}
          okText="‡πÉ‡∏ä‡πà"
          cancelText="‡πÑ‡∏°‡πà"
        >
          <Button danger>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</Button>
        </Popconfirm>
      ),
    },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-50 to-purple-50">
      <Header />
      <div className="p-6 max-w-4xl mx-auto">
        <h2 className="text-2xl font-bold mb-4">üõè ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h2>
        <Table
          columns={columns}
          dataSource={bookings}  // ‡πÉ‡∏ä‡πâ bookings ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÑ‡∏ß‡πâ
          rowKey="id"
          bordered
          pagination={{ pageSize: 5 }}
        />
      </div>
    </div>
  );
}

export default MyBookings;
